version: '3.8'

services:
  # Main application
  bharat-kyc-app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:password@bharat-kyc-db:5432/bharat_kyc
      - REDIS_URL=redis://bharat-kyc-redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - bharat-kyc-db
      - bharat-kyc-redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  bharat-kyc-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=bharat_kyc
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  bharat-kyc-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - bharat-kyc-app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: bharat-kyc-network
